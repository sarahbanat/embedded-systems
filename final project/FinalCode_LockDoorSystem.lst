;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/23/2023 12:47:35 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2AFF      	GOTO       767
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00CC      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00CB      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A4      	MOVWF      36
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A3      	MOVWF      35
0x000F	0x0872      	MOVF       R2, 0
0x0010	0x00A2      	MOVWF      34
0x0011	0x0873      	MOVF       R3, 0
0x0012	0x00A1      	MOVWF      33
0x0013	0x0874      	MOVF       R4, 0
0x0014	0x00A0      	MOVWF      32
;FinalCode_LockDoorSystem.c,30 :: 		void interrupt(void){
;FinalCode_LockDoorSystem.c,47 :: 		if(PIR1&0x04){//CCP1 interrupt
0x0015	0x1D0C      	BTFSS      PIR1, 2
0x0016	0x283E      	GOTO       L_interrupt6
;FinalCode_LockDoorSystem.c,48 :: 		if(HL){ //high
0x0017	0x083D      	MOVF       _HL, 0
0x0018	0x1903      	BTFSC      STATUS, 2
0x0019	0x2827      	GOTO       L_interrupt7
;FinalCode_LockDoorSystem.c,49 :: 		CCPR1H= angle >>8;
0x001A	0x0840      	MOVF       _angle+1, 0
0x001B	0x00F0      	MOVWF      R0
0x001C	0x01F1      	CLRF       R0+1
0x001D	0x0870      	MOVF       R0, 0
0x001E	0x0096      	MOVWF      CCPR1H
;FinalCode_LockDoorSystem.c,50 :: 		CCPR1L= angle;
0x001F	0x083F      	MOVF       _angle, 0
0x0020	0x0095      	MOVWF      CCPR1L
;FinalCode_LockDoorSystem.c,51 :: 		HL=0;//next time low
0x0021	0x01BD      	CLRF       _HL
;FinalCode_LockDoorSystem.c,52 :: 		CCP1CON=0x09;//next time Falling edge
0x0022	0x3009      	MOVLW      9
0x0023	0x0097      	MOVWF      CCP1CON
;FinalCode_LockDoorSystem.c,53 :: 		TMR1H=0;
0x0024	0x018F      	CLRF       TMR1H
;FinalCode_LockDoorSystem.c,54 :: 		TMR1L=0;
0x0025	0x018E      	CLRF       TMR1L
;FinalCode_LockDoorSystem.c,55 :: 		}
0x0026	0x283C      	GOTO       L_interrupt8
L_interrupt7:
;FinalCode_LockDoorSystem.c,57 :: 		CCPR1H= (40000 - angle) >>8;
0x0027	0x083F      	MOVF       _angle, 0
0x0028	0x3C40      	SUBLW      64
0x0029	0x00F3      	MOVWF      R3
0x002A	0x0840      	MOVF       _angle+1, 0
0x002B	0x1C03      	BTFSS      STATUS, 0
0x002C	0x3E01      	ADDLW      1
0x002D	0x3C9C      	SUBLW      156
0x002E	0x00F4      	MOVWF      R3+1
0x002F	0x0874      	MOVF       R3+1, 0
0x0030	0x00F0      	MOVWF      R0
0x0031	0x01F1      	CLRF       R0+1
0x0032	0x0870      	MOVF       R0, 0
0x0033	0x0096      	MOVWF      CCPR1H
;FinalCode_LockDoorSystem.c,58 :: 		CCPR1L= (40000 - angle);
0x0034	0x0873      	MOVF       R3, 0
0x0035	0x0095      	MOVWF      CCPR1L
;FinalCode_LockDoorSystem.c,59 :: 		CCP1CON=0x08; //next time rising edge
0x0036	0x3008      	MOVLW      8
0x0037	0x0097      	MOVWF      CCP1CON
;FinalCode_LockDoorSystem.c,60 :: 		HL=1; //next time High
0x0038	0x3001      	MOVLW      1
0x0039	0x00BD      	MOVWF      _HL
;FinalCode_LockDoorSystem.c,61 :: 		TMR1H=0;
0x003A	0x018F      	CLRF       TMR1H
;FinalCode_LockDoorSystem.c,62 :: 		TMR1L=0;
0x003B	0x018E      	CLRF       TMR1L
;FinalCode_LockDoorSystem.c,64 :: 		}
L_interrupt8:
;FinalCode_LockDoorSystem.c,65 :: 		PIR1=PIR1&0xFB; //CLEAR CCP1 Interrupt Flag
0x003C	0x30FB      	MOVLW      251
0x003D	0x058C      	ANDWF      PIR1, 1
;FinalCode_LockDoorSystem.c,66 :: 		}
L_interrupt6:
;FinalCode_LockDoorSystem.c,68 :: 		}
L_end_interrupt:
L__interrupt92:
0x003E	0x0824      	MOVF       36, 0
0x003F	0x00F0      	MOVWF      R0
0x0040	0x0823      	MOVF       35, 0
0x0041	0x00F1      	MOVWF      R1
0x0042	0x0822      	MOVF       34, 0
0x0043	0x00F2      	MOVWF      R2
0x0044	0x0821      	MOVF       33, 0
0x0045	0x00F3      	MOVWF      R3
0x0046	0x0820      	MOVF       32, 0
0x0047	0x00F4      	MOVWF      R4
0x0048	0x084B      	MOVF       ___savePCLATH, 0
0x0049	0x008A      	MOVWF      PCLATH
0x004A	0x0E4C      	SWAPF      ___saveSTATUS, 0
0x004B	0x0083      	MOVWF      STATUS
0x004C	0x0EFF      	SWAPF      R15, 1
0x004D	0x0E7F      	SWAPF      R15, 0
0x004E	0x0009      	RETFIE
; end of _interrupt
_myDelay:
;FinalCode_LockDoorSystem.c,24 :: 		void myDelay(unsigned int x){  //this delay will give delays in seconds depending on value (x) sent to it
;FinalCode_LockDoorSystem.c,25 :: 		tick=0;
0x004F	0x1283      	BCF        STATUS, 5
0x0050	0x1303      	BCF        STATUS, 6
0x0051	0x01BB      	CLRF       _tick
0x0052	0x01BC      	CLRF       _tick+1
;FinalCode_LockDoorSystem.c,26 :: 		for(tick=0;tick<x;tick++) {
0x0053	0x01BB      	CLRF       _tick
0x0054	0x01BC      	CLRF       _tick+1
L_myDelay0:
0x0055	0x0853      	MOVF       FARG_myDelay_x+1, 0
0x0056	0x023C      	SUBWF      _tick+1, 0
0x0057	0x1D03      	BTFSS      STATUS, 2
0x0058	0x285B      	GOTO       L__myDelay89
0x0059	0x0852      	MOVF       FARG_myDelay_x, 0
0x005A	0x023B      	SUBWF      _tick, 0
L__myDelay89:
0x005B	0x1803      	BTFSC      STATUS, 0
0x005C	0x288D      	GOTO       L_myDelay1
;FinalCode_LockDoorSystem.c,27 :: 		for (count8=0;count8<2000;count8++);
0x005D	0x01B7      	CLRF       _count8
0x005E	0x01B8      	CLRF       _count8+1
0x005F	0x01B9      	CLRF       _count8+2
0x0060	0x01BA      	CLRF       _count8+3
L_myDelay3:
0x0061	0x3000      	MOVLW      0
0x0062	0x023A      	SUBWF      _count8+3, 0
0x0063	0x1D03      	BTFSS      STATUS, 2
0x0064	0x286F      	GOTO       L__myDelay90
0x0065	0x3000      	MOVLW      0
0x0066	0x0239      	SUBWF      _count8+2, 0
0x0067	0x1D03      	BTFSS      STATUS, 2
0x0068	0x286F      	GOTO       L__myDelay90
0x0069	0x3007      	MOVLW      7
0x006A	0x0238      	SUBWF      _count8+1, 0
0x006B	0x1D03      	BTFSS      STATUS, 2
0x006C	0x286F      	GOTO       L__myDelay90
0x006D	0x30D0      	MOVLW      208
0x006E	0x0237      	SUBWF      _count8, 0
L__myDelay90:
0x006F	0x1803      	BTFSC      STATUS, 0
0x0070	0x2889      	GOTO       L_myDelay4
0x0071	0x0837      	MOVF       _count8, 0
0x0072	0x00F0      	MOVWF      R0
0x0073	0x0838      	MOVF       _count8+1, 0
0x0074	0x00F1      	MOVWF      R0+1
0x0075	0x0839      	MOVF       _count8+2, 0
0x0076	0x00F2      	MOVWF      R0+2
0x0077	0x083A      	MOVF       _count8+3, 0
0x0078	0x00F3      	MOVWF      R0+3
0x0079	0x0AF0      	INCF       R0, 1
0x007A	0x1903      	BTFSC      STATUS, 2
0x007B	0x0AF1      	INCF       R0+1, 1
0x007C	0x1903      	BTFSC      STATUS, 2
0x007D	0x0AF2      	INCF       R0+2, 1
0x007E	0x1903      	BTFSC      STATUS, 2
0x007F	0x0AF3      	INCF       R0+3, 1
0x0080	0x0870      	MOVF       R0, 0
0x0081	0x00B7      	MOVWF      _count8
0x0082	0x0871      	MOVF       R0+1, 0
0x0083	0x00B8      	MOVWF      _count8+1
0x0084	0x0872      	MOVF       R0+2, 0
0x0085	0x00B9      	MOVWF      _count8+2
0x0086	0x0873      	MOVF       R0+3, 0
0x0087	0x00BA      	MOVWF      _count8+3
0x0088	0x2861      	GOTO       L_myDelay3
L_myDelay4:
;FinalCode_LockDoorSystem.c,26 :: 		for(tick=0;tick<x;tick++) {
0x0089	0x0ABB      	INCF       _tick, 1
0x008A	0x1903      	BTFSC      STATUS, 2
0x008B	0x0ABC      	INCF       _tick+1, 1
;FinalCode_LockDoorSystem.c,28 :: 		}
0x008C	0x2855      	GOTO       L_myDelay0
L_myDelay1:
;FinalCode_LockDoorSystem.c,29 :: 		}
L_end_myDelay:
0x008D	0x0008      	RETURN
; end of _myDelay
_LCDdata:
;FinalCode_LockDoorSystem.c,71 :: 		void LCDdata(char data1)
;FinalCode_LockDoorSystem.c,73 :: 		PORTD = data1;
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x1303      	BCF        STATUS, 6
0x0090	0x0851      	MOVF       FARG_LCDdata_data1, 0
0x0091	0x0088      	MOVWF      PORTD
;FinalCode_LockDoorSystem.c,74 :: 		PORTC= PORTC | 0x20;//RS=01;
0x0092	0x1687      	BSF        PORTC, 5
;FinalCode_LockDoorSystem.c,75 :: 		PORTC = PORTC & 0xBF;//RW=00;
0x0093	0x30BF      	MOVLW      191
0x0094	0x0587      	ANDWF      PORTC, 1
;FinalCode_LockDoorSystem.c,76 :: 		PORTC = PORTC | 0x80;//EN=01;
0x0095	0x1787      	BSF        PORTC, 7
;FinalCode_LockDoorSystem.c,77 :: 		myDelay(500);
0x0096	0x30F4      	MOVLW      244
0x0097	0x00D2      	MOVWF      FARG_myDelay_x
0x0098	0x3001      	MOVLW      1
0x0099	0x00D3      	MOVWF      FARG_myDelay_x+1
0x009A	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,78 :: 		PORTC = PORTC & 0x7F;//EN=00;
0x009B	0x307F      	MOVLW      127
0x009C	0x0587      	ANDWF      PORTC, 1
;FinalCode_LockDoorSystem.c,79 :: 		}
L_end_LCDdata:
0x009D	0x0008      	RETURN
; end of _LCDdata
_LCDcommand:
;FinalCode_LockDoorSystem.c,80 :: 		void LCDcommand(unsigned char command)
;FinalCode_LockDoorSystem.c,82 :: 		PORTD=command;
0x009E	0x1283      	BCF        STATUS, 5
0x009F	0x1303      	BCF        STATUS, 6
0x00A0	0x0851      	MOVF       FARG_LCDcommand_command, 0
0x00A1	0x0088      	MOVWF      PORTD
;FinalCode_LockDoorSystem.c,83 :: 		PORTC = PORTC & 0xDF;//RS=0;
0x00A2	0x30DF      	MOVLW      223
0x00A3	0x0587      	ANDWF      PORTC, 1
;FinalCode_LockDoorSystem.c,84 :: 		PORTC = PORTC & 0xBF;//RW=00;
0x00A4	0x30BF      	MOVLW      191
0x00A5	0x0587      	ANDWF      PORTC, 1
;FinalCode_LockDoorSystem.c,85 :: 		PORTC = PORTC | 0x80;//EN=01;
0x00A6	0x1787      	BSF        PORTC, 7
;FinalCode_LockDoorSystem.c,86 :: 		myDelay(500);
0x00A7	0x30F4      	MOVLW      244
0x00A8	0x00D2      	MOVWF      FARG_myDelay_x
0x00A9	0x3001      	MOVLW      1
0x00AA	0x00D3      	MOVWF      FARG_myDelay_x+1
0x00AB	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,87 :: 		PORTC = PORTC & 0x7F;//EN=00;
0x00AC	0x307F      	MOVLW      127
0x00AD	0x0587      	ANDWF      PORTC, 1
;FinalCode_LockDoorSystem.c,88 :: 		}
L_end_LCDcommand:
0x00AE	0x0008      	RETURN
; end of _LCDcommand
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00AF	0x1283      	BCF        STATUS, 5
0x00B0	0x1303      	BCF        STATUS, 6
0x00B1	0x0832      	MOVF       ___DoICPAddr+1, 0
0x00B2	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00B3	0x0831      	MOVF       ___DoICPAddr, 0
0x00B4	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00B5	0x0008      	RETURN
; end of _____DoICP
_LCDinit:
;FinalCode_LockDoorSystem.c,97 :: 		void LCDinit()
;FinalCode_LockDoorSystem.c,99 :: 		LCDcommand(0x38);   //2 lines and 5*7 matrix
0x00B6	0x3038      	MOVLW      56
0x00B7	0x1283      	BCF        STATUS, 5
0x00B8	0x1303      	BCF        STATUS, 6
0x00B9	0x00D1      	MOVWF      FARG_LCDcommand_command
0x00BA	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,100 :: 		LCDcommand(0x06);   // Shift cursor to right
0x00BB	0x3006      	MOVLW      6
0x00BC	0x00D1      	MOVWF      FARG_LCDcommand_command
0x00BD	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,101 :: 		LCDcommand(0x0C);   // Force cursor to begin on the second line
0x00BE	0x300C      	MOVLW      12
0x00BF	0x00D1      	MOVWF      FARG_LCDcommand_command
0x00C0	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,102 :: 		LCDcommand(0x01);   // Shift cursor position to left
0x00C1	0x3001      	MOVLW      1
0x00C2	0x00D1      	MOVWF      FARG_LCDcommand_command
0x00C3	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,103 :: 		}
L_end_LCDinit:
0x00C4	0x0008      	RETURN
; end of _LCDinit
_Mul_8X8_U:
;__Lib_Math.c,103 :: 		
;__Lib_Math.c,108 :: 		
0x00C5	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,109 :: 		
0x00C6	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,110 :: 		
0x00C7	0x0870      	MOVF       R0, 0
;__Lib_Math.c,111 :: 		
0x00C8	0x00F1      	MOVWF      R1
;__Lib_Math.c,112 :: 		
0x00C9	0x01F0      	CLRF       R0
;__Lib_Math.c,113 :: 		
0x00CA	0x3008      	MOVLW      8
;__Lib_Math.c,114 :: 		
0x00CB	0x00FC      	MOVWF      R12
;__Lib_Math.c,115 :: 		
0x00CC	0x0871      	MOVF       R1, 0
;__Lib_Math.c,116 :: 		
0x00CD	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,117 :: 		
0x00CE	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,118 :: 		
0x00CF	0x28D4      	GOTO       $+5
;__Lib_Math.c,119 :: 		
0x00D0	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,120 :: 		
0x00D1	0x28CD      	GOTO       $-4
;__Lib_Math.c,121 :: 		
0x00D2	0x01F1      	CLRF       R1
;__Lib_Math.c,122 :: 		
0x00D3	0x3400      	RETLW      0
;__Lib_Math.c,123 :: 		
0x00D4	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,124 :: 		
0x00D5	0x28D9      	GOTO       $+4
;__Lib_Math.c,125 :: 		
0x00D6	0x0CF4      	RRF        R4, 1
;__Lib_Math.c,126 :: 		
0x00D7	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,127 :: 		
0x00D8	0x07F1      	ADDWF      R1, 1
;__Lib_Math.c,128 :: 		
0x00D9	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,129 :: 		
0x00DA	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,130 :: 		
0x00DB	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,131 :: 		
0x00DC	0x28D6      	GOTO       $-6
;__Lib_Math.c,133 :: 		
;__Lib_Math.c,134 :: 		
L_end_Mul_8X8_U:
0x00DD	0x0008      	RETURN
; end of _Mul_8X8_U
_doorcontrol:
;FinalCode_LockDoorSystem.c,120 :: 		void doorcontrol()
;FinalCode_LockDoorSystem.c,122 :: 		TMR0 = 248;
0x00DE	0x30F8      	MOVLW      248
0x00DF	0x1283      	BCF        STATUS, 5
0x00E0	0x1303      	BCF        STATUS, 6
0x00E1	0x0081      	MOVWF      TMR0
;FinalCode_LockDoorSystem.c,125 :: 		TMR1H=0;
0x00E2	0x018F      	CLRF       TMR1H
;FinalCode_LockDoorSystem.c,126 :: 		TMR1L=0;
0x00E3	0x018E      	CLRF       TMR1L
;FinalCode_LockDoorSystem.c,128 :: 		HL=1; //start high
0x00E4	0x3001      	MOVLW      1
0x00E5	0x00BD      	MOVWF      _HL
;FinalCode_LockDoorSystem.c,129 :: 		CCP1CON=0x08;//
0x00E6	0x3008      	MOVLW      8
0x00E7	0x0097      	MOVWF      CCP1CON
;FinalCode_LockDoorSystem.c,131 :: 		T1CON=0x01;//TMR1 On Fosc/4 (inc 0.5uS) with 0 prescaler (TMR1 overflow after 0xFFFF counts ==65535)==> 32.767ms
0x00E8	0x3001      	MOVLW      1
0x00E9	0x0090      	MOVWF      T1CON
;FinalCode_LockDoorSystem.c,133 :: 		INTCON=0xF0;//enable TMR0 overflow, TMR1 overflow, External interrupts and peripheral interrupts;
0x00EA	0x30F0      	MOVLW      240
0x00EB	0x008B      	MOVWF      INTCON
;FinalCode_LockDoorSystem.c,134 :: 		PIE1=PIE1|0x04;// Enable CCP1 interrupts
0x00EC	0x1683      	BSF        STATUS, 5
0x00ED	0x150C      	BSF        PIE1, 2
;FinalCode_LockDoorSystem.c,135 :: 		CCPR1H=2000>>8;
0x00EE	0x3007      	MOVLW      7
0x00EF	0x1283      	BCF        STATUS, 5
0x00F0	0x0096      	MOVWF      CCPR1H
;FinalCode_LockDoorSystem.c,136 :: 		CCPR1L=2000;
0x00F1	0x30D0      	MOVLW      208
0x00F2	0x0095      	MOVWF      CCPR1L
;FinalCode_LockDoorSystem.c,138 :: 		angle=1100;
0x00F3	0x304C      	MOVLW      76
0x00F4	0x00BF      	MOVWF      _angle
0x00F5	0x3004      	MOVLW      4
0x00F6	0x00C0      	MOVWF      _angle+1
;FinalCode_LockDoorSystem.c,139 :: 		myDelay(5000);
0x00F7	0x3088      	MOVLW      136
0x00F8	0x00D2      	MOVWF      FARG_myDelay_x
0x00F9	0x3013      	MOVLW      19
0x00FA	0x00D3      	MOVWF      FARG_myDelay_x+1
0x00FB	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,140 :: 		angle=3600;
0x00FC	0x3010      	MOVLW      16
0x00FD	0x00BF      	MOVWF      _angle
0x00FE	0x300E      	MOVLW      14
0x00FF	0x00C0      	MOVWF      _angle+1
;FinalCode_LockDoorSystem.c,142 :: 		}
L_end_doorcontrol:
0x0100	0x0008      	RETURN
; end of _doorcontrol
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0101	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0102	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0103	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0104	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0105	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0106	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0107	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0108	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0109	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x010A	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x010B	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x010C	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x010D	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x010E	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x010F	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0110	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0111	0x2919      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0112	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0113	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0114	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0115	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0116	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0117	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0118	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0119	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x011A	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x011B	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x011C	0x2907      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x011D	0x0008      	RETURN
; end of _Div_16X16_U
_LCDout:
;FinalCode_LockDoorSystem.c,89 :: 		void LCDout(const unsigned char *string, unsigned char length)
;FinalCode_LockDoorSystem.c,92 :: 		for(k=0;k<length;k++)
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x1303      	BCF        STATUS, 6
0x0120	0x01D0      	CLRF       LCDout_k_L0
L_LCDout9:
0x0121	0x084F      	MOVF       FARG_LCDout_length, 0
0x0122	0x0250      	SUBWF      LCDout_k_L0, 0
0x0123	0x1803      	BTFSC      STATUS, 0
0x0124	0x2937      	GOTO       L_LCDout10
;FinalCode_LockDoorSystem.c,94 :: 		LCDdata(string[k]);
0x0125	0x0850      	MOVF       LCDout_k_L0, 0
0x0126	0x074D      	ADDWF      FARG_LCDout_string, 0
0x0127	0x00F0      	MOVWF      R0
0x0128	0x084E      	MOVF       FARG_LCDout_string+1, 0
0x0129	0x1803      	BTFSC      STATUS, 0
0x012A	0x3E01      	ADDLW      1
0x012B	0x00F1      	MOVWF      R0+1
0x012C	0x0870      	MOVF       R0, 0
0x012D	0x00B1      	MOVWF      ___DoICPAddr
0x012E	0x0871      	MOVF       R0+1, 0
0x012F	0x00B2      	MOVWF      ___DoICPAddr+1
0x0130	0x20AF      	CALL       _____DoICP
0x0131	0x118A      	BCF        PCLATH, 3
0x0132	0x120A      	BCF        PCLATH, 4
0x0133	0x00D1      	MOVWF      FARG_LCDdata_data1
0x0134	0x208E      	CALL       _LCDdata
;FinalCode_LockDoorSystem.c,92 :: 		for(k=0;k<length;k++)
0x0135	0x0AD0      	INCF       LCDout_k_L0, 1
;FinalCode_LockDoorSystem.c,95 :: 		}
0x0136	0x2921      	GOTO       L_LCDout9
L_LCDout10:
;FinalCode_LockDoorSystem.c,96 :: 		}
L_end_LCDout:
0x0137	0x0008      	RETURN
; end of _LCDout
_resetpass:
;FinalCode_LockDoorSystem.c,108 :: 		int resetpass()
;FinalCode_LockDoorSystem.c,111 :: 		LCDinit();
0x0138	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,112 :: 		LCDcommand(0x80);
0x0139	0x3080      	MOVLW      128
0x013A	0x00D1      	MOVWF      FARG_LCDcommand_command
0x013B	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,113 :: 		LCDout("RESET...", 8);
0x013C	0x30B9      	MOVLW      ?lstr_1_FinalCode_LockDoorSystem
0x013D	0x00CD      	MOVWF      FARG_LCDout_string
0x013E	0x3003      	MOVLW      hi_addr(?lstr_1_FinalCode_LockDoorSystem)
0x013F	0x00CE      	MOVWF      FARG_LCDout_string+1
0x0140	0x3008      	MOVLW      8
0x0141	0x00CF      	MOVWF      FARG_LCDout_length
0x0142	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,114 :: 		myDelay(3);
0x0143	0x3003      	MOVLW      3
0x0144	0x00D2      	MOVWF      FARG_myDelay_x
0x0145	0x3000      	MOVLW      0
0x0146	0x00D3      	MOVWF      FARG_myDelay_x+1
0x0147	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,115 :: 		asm goto 0x00;
0x0148	0x2800      	GOTO       0
;FinalCode_LockDoorSystem.c,117 :: 		return 0;
0x0149	0x01F0      	CLRF       R0
0x014A	0x01F1      	CLRF       R0+1
;FinalCode_LockDoorSystem.c,118 :: 		}
L_end_resetpass:
0x014B	0x0008      	RETURN
; end of _resetpass
_checkpass:
;FinalCode_LockDoorSystem.c,144 :: 		void checkpass()
;FinalCode_LockDoorSystem.c,146 :: 		if(pass[0]=='1' && pass[1]=='2' && pass[2]=='3' && pass[3]=='4')
0x014C	0x1283      	BCF        STATUS, 5
0x014D	0x1303      	BCF        STATUS, 6
0x014E	0x0833      	MOVF       _pass, 0
0x014F	0x3A31      	XORLW      49
0x0150	0x1D03      	BTFSS      STATUS, 2
0x0151	0x2974      	GOTO       L_checkpass14
0x0152	0x0834      	MOVF       _pass+1, 0
0x0153	0x3A32      	XORLW      50
0x0154	0x1D03      	BTFSS      STATUS, 2
0x0155	0x2974      	GOTO       L_checkpass14
0x0156	0x0835      	MOVF       _pass+2, 0
0x0157	0x3A33      	XORLW      51
0x0158	0x1D03      	BTFSS      STATUS, 2
0x0159	0x2974      	GOTO       L_checkpass14
0x015A	0x0836      	MOVF       _pass+3, 0
0x015B	0x3A34      	XORLW      52
0x015C	0x1D03      	BTFSS      STATUS, 2
0x015D	0x2974      	GOTO       L_checkpass14
L__checkpass77:
;FinalCode_LockDoorSystem.c,149 :: 		LCDinit(); //initialize LCD screen
0x015E	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,150 :: 		LCDcommand(0x80);    //Force cursor to the beginning ( 1st line)
0x015F	0x3080      	MOVLW      128
0x0160	0x00D1      	MOVWF      FARG_LCDcommand_command
0x0161	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,151 :: 		LCDout("DOOR IS OPENED", 14);
0x0162	0x3082      	MOVLW      ?lstr_2_FinalCode_LockDoorSystem
0x0163	0x00CD      	MOVWF      FARG_LCDout_string
0x0164	0x3003      	MOVLW      hi_addr(?lstr_2_FinalCode_LockDoorSystem)
0x0165	0x00CE      	MOVWF      FARG_LCDout_string+1
0x0166	0x300E      	MOVLW      14
0x0167	0x00CF      	MOVWF      FARG_LCDout_length
0x0168	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,152 :: 		PORTA=0x04; //turn on green led
0x0169	0x3004      	MOVLW      4
0x016A	0x0085      	MOVWF      PORTA
;FinalCode_LockDoorSystem.c,154 :: 		doorcontrol();
0x016B	0x20DE      	CALL       _doorcontrol
;FinalCode_LockDoorSystem.c,155 :: 		myDelay(5000);
0x016C	0x3088      	MOVLW      136
0x016D	0x00D2      	MOVWF      FARG_myDelay_x
0x016E	0x3013      	MOVLW      19
0x016F	0x00D3      	MOVWF      FARG_myDelay_x+1
0x0170	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,156 :: 		PORTA=0;
0x0171	0x0185      	CLRF       PORTA
;FinalCode_LockDoorSystem.c,159 :: 		asm goto 0x00;
0x0172	0x2800      	GOTO       0
;FinalCode_LockDoorSystem.c,161 :: 		}
0x0173	0x2A3A      	GOTO       L_checkpass15
L_checkpass14:
;FinalCode_LockDoorSystem.c,165 :: 		{   count++;    //count=count+1 (each time an entered password is incorrect)
0x0174	0x0AC4      	INCF       _count, 1
0x0175	0x1903      	BTFSC      STATUS, 2
0x0176	0x0AC5      	INCF       _count+1, 1
;FinalCode_LockDoorSystem.c,170 :: 		if (count%4==0 )   // check if password was enterred incorrectly for 3 times, each time
0x0177	0x3003      	MOVLW      3
0x0178	0x0544      	ANDWF      _count, 0
0x0179	0x00F1      	MOVWF      R1
0x017A	0x0845      	MOVF       _count+1, 0
0x017B	0x00F2      	MOVWF      R1+1
0x017C	0x3000      	MOVLW      0
0x017D	0x05F2      	ANDWF      R1+1, 1
0x017E	0x3000      	MOVLW      0
0x017F	0x0672      	XORWF      R1+1, 0
0x0180	0x1D03      	BTFSS      STATUS, 2
0x0181	0x2984      	GOTO       L__checkpass100
0x0182	0x3000      	MOVLW      0
0x0183	0x0671      	XORWF      R1, 0
L__checkpass100:
0x0184	0x1D03      	BTFSS      STATUS, 2
0x0185	0x29FE      	GOTO       L_checkpass16
;FinalCode_LockDoorSystem.c,171 :: 		{   LCDinit();  //initialize LED screen
0x0186	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,172 :: 		LCDcommand(0x80); //Force cursor to the beginning ( 1st line)
0x0187	0x3080      	MOVLW      128
0x0188	0x00D1      	MOVWF      FARG_LCDcommand_command
0x0189	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,173 :: 		LCDout("processing",10);
0x018A	0x3091      	MOVLW      ?lstr_3_FinalCode_LockDoorSystem
0x018B	0x00CD      	MOVWF      FARG_LCDout_string
0x018C	0x3003      	MOVLW      hi_addr(?lstr_3_FinalCode_LockDoorSystem)
0x018D	0x00CE      	MOVWF      FARG_LCDout_string+1
0x018E	0x300A      	MOVLW      10
0x018F	0x00CF      	MOVWF      FARG_LCDout_length
0x0190	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,174 :: 		for(k=0;k<1000;k++)
0x0191	0x01C2      	CLRF       _k
0x0192	0x01C3      	CLRF       _k+1
L_checkpass17:
0x0193	0x3003      	MOVLW      3
0x0194	0x0243      	SUBWF      _k+1, 0
0x0195	0x1D03      	BTFSS      STATUS, 2
0x0196	0x2999      	GOTO       L__checkpass101
0x0197	0x30E8      	MOVLW      232
0x0198	0x0242      	SUBWF      _k, 0
L__checkpass101:
0x0199	0x1803      	BTFSC      STATUS, 0
0x019A	0x29DB      	GOTO       L_checkpass18
;FinalCode_LockDoorSystem.c,176 :: 		if (INTCON & 0x04) {  // check if the interrupt was caused by RB0
0x019B	0x1D0B      	BTFSS      INTCON, 2
0x019C	0x29B2      	GOTO       L_checkpass20
;FinalCode_LockDoorSystem.c,178 :: 		LCDinit();  //initialize LED screen
0x019D	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,179 :: 		LCDcommand(0x80); //Force cursor to the beginning ( 1st line)
0x019E	0x3080      	MOVLW      128
0x019F	0x00D1      	MOVWF      FARG_LCDcommand_command
0x01A0	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,180 :: 		LCDout("ALARM ON", 8);          //if PIR((RA5)==1 check touch sensor and password was entered incorrectly 3 times
0x01A1	0x30C2      	MOVLW      ?lstr_4_FinalCode_LockDoorSystem
0x01A2	0x00CD      	MOVWF      FARG_LCDout_string
0x01A3	0x3003      	MOVLW      hi_addr(?lstr_4_FinalCode_LockDoorSystem)
0x01A4	0x00CE      	MOVWF      FARG_LCDout_string+1
0x01A5	0x3008      	MOVLW      8
0x01A6	0x00CF      	MOVWF      FARG_LCDout_length
0x01A7	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,182 :: 		PORTA=0x03; //turn on buzzer and red led
0x01A8	0x3003      	MOVLW      3
0x01A9	0x0085      	MOVWF      PORTA
;FinalCode_LockDoorSystem.c,184 :: 		myDelay(5000);
0x01AA	0x3088      	MOVLW      136
0x01AB	0x00D2      	MOVWF      FARG_myDelay_x
0x01AC	0x3013      	MOVLW      19
0x01AD	0x00D3      	MOVWF      FARG_myDelay_x+1
0x01AE	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,186 :: 		PORTA=0;
0x01AF	0x0185      	CLRF       PORTA
;FinalCode_LockDoorSystem.c,188 :: 		INTCON &= ~(0x04);  // clear the interrupt flag
0x01B0	0x110B      	BCF        INTCON, 2
;FinalCode_LockDoorSystem.c,189 :: 		asm goto 0x00;
0x01B1	0x2800      	GOTO       0
;FinalCode_LockDoorSystem.c,190 :: 		}
L_checkpass20:
;FinalCode_LockDoorSystem.c,191 :: 		for(v=0;v<1000;v++)
0x01B2	0x01C6      	CLRF       _v
0x01B3	0x01C7      	CLRF       _v+1
L_checkpass21:
0x01B4	0x3003      	MOVLW      3
0x01B5	0x0247      	SUBWF      _v+1, 0
0x01B6	0x1D03      	BTFSS      STATUS, 2
0x01B7	0x29BA      	GOTO       L__checkpass102
0x01B8	0x30E8      	MOVLW      232
0x01B9	0x0246      	SUBWF      _v, 0
L__checkpass102:
0x01BA	0x1803      	BTFSC      STATUS, 0
0x01BB	0x29D7      	GOTO       L_checkpass22
;FinalCode_LockDoorSystem.c,194 :: 		if (INTCON & 0x04) {  // check if the interrupt was caused by RB0
0x01BC	0x1D0B      	BTFSS      INTCON, 2
0x01BD	0x29D3      	GOTO       L_checkpass24
;FinalCode_LockDoorSystem.c,196 :: 		LCDinit();  //initialize LED screen
0x01BE	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,197 :: 		LCDcommand(0x80); //Force cursor to the beginning ( 1st line)
0x01BF	0x3080      	MOVLW      128
0x01C0	0x00D1      	MOVWF      FARG_LCDcommand_command
0x01C1	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,198 :: 		LCDout("ALARM ON", 8);          //if PIR((RA5)==1 check touch sensor and password was entered incorrectly 3 times
0x01C2	0x30B0      	MOVLW      ?lstr_5_FinalCode_LockDoorSystem
0x01C3	0x00CD      	MOVWF      FARG_LCDout_string
0x01C4	0x3003      	MOVLW      hi_addr(?lstr_5_FinalCode_LockDoorSystem)
0x01C5	0x00CE      	MOVWF      FARG_LCDout_string+1
0x01C6	0x3008      	MOVLW      8
0x01C7	0x00CF      	MOVWF      FARG_LCDout_length
0x01C8	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,200 :: 		PORTA=0x03; //turn on buzzer and red led
0x01C9	0x3003      	MOVLW      3
0x01CA	0x0085      	MOVWF      PORTA
;FinalCode_LockDoorSystem.c,202 :: 		myDelay(5000);
0x01CB	0x3088      	MOVLW      136
0x01CC	0x00D2      	MOVWF      FARG_myDelay_x
0x01CD	0x3013      	MOVLW      19
0x01CE	0x00D3      	MOVWF      FARG_myDelay_x+1
0x01CF	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,204 :: 		PORTA=0;
0x01D0	0x0185      	CLRF       PORTA
;FinalCode_LockDoorSystem.c,206 :: 		INTCON &= ~(0x04);  // clear the interrupt flag
0x01D1	0x110B      	BCF        INTCON, 2
;FinalCode_LockDoorSystem.c,207 :: 		asm goto 0x00;
0x01D2	0x2800      	GOTO       0
;FinalCode_LockDoorSystem.c,208 :: 		}
L_checkpass24:
;FinalCode_LockDoorSystem.c,191 :: 		for(v=0;v<1000;v++)
0x01D3	0x0AC6      	INCF       _v, 1
0x01D4	0x1903      	BTFSC      STATUS, 2
0x01D5	0x0AC7      	INCF       _v+1, 1
;FinalCode_LockDoorSystem.c,209 :: 		}
0x01D6	0x29B4      	GOTO       L_checkpass21
L_checkpass22:
;FinalCode_LockDoorSystem.c,174 :: 		for(k=0;k<1000;k++)
0x01D7	0x0AC2      	INCF       _k, 1
0x01D8	0x1903      	BTFSC      STATUS, 2
0x01D9	0x0AC3      	INCF       _k+1, 1
;FinalCode_LockDoorSystem.c,210 :: 		}
0x01DA	0x2993      	GOTO       L_checkpass17
L_checkpass18:
;FinalCode_LockDoorSystem.c,212 :: 		LCDinit();
0x01DB	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,213 :: 		LCDcommand(0x80); // Force cursor to the beginning ( 1st line)
0x01DC	0x3080      	MOVLW      128
0x01DD	0x00D1      	MOVWF      FARG_LCDcommand_command
0x01DE	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,214 :: 		LCDout("INCORRECT", 9);
0x01DF	0x309C      	MOVLW      ?lstr_6_FinalCode_LockDoorSystem
0x01E0	0x00CD      	MOVWF      FARG_LCDout_string
0x01E1	0x3003      	MOVLW      hi_addr(?lstr_6_FinalCode_LockDoorSystem)
0x01E2	0x00CE      	MOVWF      FARG_LCDout_string+1
0x01E3	0x3009      	MOVLW      9
0x01E4	0x00CF      	MOVWF      FARG_LCDout_length
0x01E5	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,215 :: 		for(k=0;k<10;k++)
0x01E6	0x01C2      	CLRF       _k
0x01E7	0x01C3      	CLRF       _k+1
L_checkpass25:
0x01E8	0x3000      	MOVLW      0
0x01E9	0x0243      	SUBWF      _k+1, 0
0x01EA	0x1D03      	BTFSS      STATUS, 2
0x01EB	0x29EE      	GOTO       L__checkpass103
0x01EC	0x300A      	MOVLW      10
0x01ED	0x0242      	SUBWF      _k, 0
L__checkpass103:
0x01EE	0x1803      	BTFSC      STATUS, 0
0x01EF	0x29FC      	GOTO       L_checkpass26
;FinalCode_LockDoorSystem.c,217 :: 		PORTA=0x02;
0x01F0	0x3002      	MOVLW      2
0x01F1	0x0085      	MOVWF      PORTA
;FinalCode_LockDoorSystem.c,218 :: 		myDelay(5000);
0x01F2	0x3088      	MOVLW      136
0x01F3	0x00D2      	MOVWF      FARG_myDelay_x
0x01F4	0x3013      	MOVLW      19
0x01F5	0x00D3      	MOVWF      FARG_myDelay_x+1
0x01F6	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,219 :: 		PORTA=0;
0x01F7	0x0185      	CLRF       PORTA
;FinalCode_LockDoorSystem.c,215 :: 		for(k=0;k<10;k++)
0x01F8	0x0AC2      	INCF       _k, 1
0x01F9	0x1903      	BTFSC      STATUS, 2
0x01FA	0x0AC3      	INCF       _k+1, 1
;FinalCode_LockDoorSystem.c,220 :: 		}
0x01FB	0x29E8      	GOTO       L_checkpass25
L_checkpass26:
;FinalCode_LockDoorSystem.c,222 :: 		asm goto 0x00;
0x01FC	0x2800      	GOTO       0
;FinalCode_LockDoorSystem.c,226 :: 		}
0x01FD	0x2A3A      	GOTO       L_checkpass28
L_checkpass16:
;FinalCode_LockDoorSystem.c,227 :: 		else if(count%3!=0)
0x01FE	0x3003      	MOVLW      3
0x01FF	0x00F4      	MOVWF      R4
0x0200	0x3000      	MOVLW      0
0x0201	0x00F5      	MOVWF      R4+1
0x0202	0x0844      	MOVF       _count, 0
0x0203	0x00F0      	MOVWF      R0
0x0204	0x0845      	MOVF       _count+1, 0
0x0205	0x00F1      	MOVWF      R0+1
0x0206	0x2101      	CALL       _Div_16X16_U
0x0207	0x0878      	MOVF       R8, 0
0x0208	0x00F0      	MOVWF      R0
0x0209	0x0879      	MOVF       R8+1, 0
0x020A	0x00F1      	MOVWF      R0+1
0x020B	0x3000      	MOVLW      0
0x020C	0x0671      	XORWF      R0+1, 0
0x020D	0x1D03      	BTFSS      STATUS, 2
0x020E	0x2A11      	GOTO       L__checkpass104
0x020F	0x3000      	MOVLW      0
0x0210	0x0670      	XORWF      R0, 0
L__checkpass104:
0x0211	0x1903      	BTFSC      STATUS, 2
0x0212	0x2A3A      	GOTO       L_checkpass29
;FinalCode_LockDoorSystem.c,229 :: 		LCDinit();
0x0213	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,230 :: 		LCDcommand(0x80); // Force cursor to the beginning ( 1st line)
0x0214	0x3080      	MOVLW      128
0x0215	0x00D1      	MOVWF      FARG_LCDcommand_command
0x0216	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,231 :: 		LCDout("INCORRECT", 9);
0x0217	0x30A6      	MOVLW      ?lstr_7_FinalCode_LockDoorSystem
0x0218	0x00CD      	MOVWF      FARG_LCDout_string
0x0219	0x3003      	MOVLW      hi_addr(?lstr_7_FinalCode_LockDoorSystem)
0x021A	0x00CE      	MOVWF      FARG_LCDout_string+1
0x021B	0x3009      	MOVLW      9
0x021C	0x00CF      	MOVWF      FARG_LCDout_length
0x021D	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,232 :: 		for(k=0;k<10;k++)
0x021E	0x01C2      	CLRF       _k
0x021F	0x01C3      	CLRF       _k+1
L_checkpass30:
0x0220	0x3000      	MOVLW      0
0x0221	0x0243      	SUBWF      _k+1, 0
0x0222	0x1D03      	BTFSS      STATUS, 2
0x0223	0x2A26      	GOTO       L__checkpass105
0x0224	0x300A      	MOVLW      10
0x0225	0x0242      	SUBWF      _k, 0
L__checkpass105:
0x0226	0x1803      	BTFSC      STATUS, 0
0x0227	0x2A34      	GOTO       L_checkpass31
;FinalCode_LockDoorSystem.c,234 :: 		PORTA=0x02;
0x0228	0x3002      	MOVLW      2
0x0229	0x0085      	MOVWF      PORTA
;FinalCode_LockDoorSystem.c,235 :: 		myDelay(5000);
0x022A	0x3088      	MOVLW      136
0x022B	0x00D2      	MOVWF      FARG_myDelay_x
0x022C	0x3013      	MOVLW      19
0x022D	0x00D3      	MOVWF      FARG_myDelay_x+1
0x022E	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,236 :: 		PORTA=0;
0x022F	0x0185      	CLRF       PORTA
;FinalCode_LockDoorSystem.c,232 :: 		for(k=0;k<10;k++)
0x0230	0x0AC2      	INCF       _k, 1
0x0231	0x1903      	BTFSC      STATUS, 2
0x0232	0x0AC3      	INCF       _k+1, 1
;FinalCode_LockDoorSystem.c,237 :: 		}
0x0233	0x2A20      	GOTO       L_checkpass30
L_checkpass31:
;FinalCode_LockDoorSystem.c,239 :: 		myDelay(2000);
0x0234	0x30D0      	MOVLW      208
0x0235	0x00D2      	MOVWF      FARG_myDelay_x
0x0236	0x3007      	MOVLW      7
0x0237	0x00D3      	MOVWF      FARG_myDelay_x+1
0x0238	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,241 :: 		asm goto 0x00
0x0239	0x2800      	GOTO       0
;FinalCode_LockDoorSystem.c,244 :: 		}
L_checkpass29:
L_checkpass28:
;FinalCode_LockDoorSystem.c,246 :: 		}
L_checkpass15:
;FinalCode_LockDoorSystem.c,247 :: 		}
L_end_checkpass:
0x023A	0x0008      	RETURN
; end of _checkpass
_key:
;FinalCode_LockDoorSystem.c,250 :: 		unsigned char key() {
;FinalCode_LockDoorSystem.c,252 :: 		PORTB=0X00;
0x023B	0x1283      	BCF        STATUS, 5
0x023C	0x1303      	BCF        STATUS, 6
0x023D	0x0186      	CLRF       PORTB
;FinalCode_LockDoorSystem.c,255 :: 		while(COL1&&COL2&&COL3);
L_key33:
0x023E	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x023F	0x2A45      	GOTO       L_key34
0x0240	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x0241	0x2A45      	GOTO       L_key34
0x0242	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x0243	0x2A45      	GOTO       L_key34
L__key87:
0x0244	0x2A3E      	GOTO       L_key33
L_key34:
;FinalCode_LockDoorSystem.c,258 :: 		while(!COL1||!COL2||!COL3) { //is checking if any of the column pins (COL1, COL2, COL3) are low. This means that if any of the column pins are connected to a button that is being pressed, the loop will continue to execute.
L_key37:
0x0245	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x0246	0x2A4C      	GOTO       L__key86
0x0247	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x0248	0x2A4C      	GOTO       L__key86
0x0249	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x024A	0x2A4C      	GOTO       L__key86
0x024B	0x2AB6      	GOTO       L_key38
L__key86:
;FinalCode_LockDoorSystem.c,260 :: 		ROW1=0;
0x024C	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
;FinalCode_LockDoorSystem.c,261 :: 		ROW2=ROW3=ROW4=1;
0x024D	0x1786      	BSF        RB7_bit, BitPos(RB7_bit+0)
0x024E	0x1B86      	BTFSC      RB7_bit, BitPos(RB7_bit+0)
0x024F	0x2A52      	GOTO       L__key107
0x0250	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
0x0251	0x2A53      	GOTO       L__key108
L__key107:
0x0252	0x1706      	BSF        RB6_bit, BitPos(RB6_bit+0)
L__key108:
0x0253	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x0254	0x2A57      	GOTO       L__key109
0x0255	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x0256	0x2A58      	GOTO       L__key110
L__key109:
0x0257	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
L__key110:
;FinalCode_LockDoorSystem.c,263 :: 		if(!COL1||!COL2||!COL3) {
0x0258	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x0259	0x2A5F      	GOTO       L__key85
0x025A	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x025B	0x2A5F      	GOTO       L__key85
0x025C	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x025D	0x2A5F      	GOTO       L__key85
0x025E	0x2A64      	GOTO       L_key43
L__key85:
;FinalCode_LockDoorSystem.c,264 :: 		myDelay(0.1);
0x025F	0x01D2      	CLRF       FARG_myDelay_x
0x0260	0x01D3      	CLRF       FARG_myDelay_x+1
0x0261	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,266 :: 		rownum=0;
0x0262	0x01C1      	CLRF       _rownum
;FinalCode_LockDoorSystem.c,267 :: 		break;
0x0263	0x2AB6      	GOTO       L_key38
;FinalCode_LockDoorSystem.c,268 :: 		}
L_key43:
;FinalCode_LockDoorSystem.c,270 :: 		ROW2=0;ROW1=ROW3=ROW4=1;
0x0264	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x0265	0x1786      	BSF        RB7_bit, BitPos(RB7_bit+0)
0x0266	0x1B86      	BTFSC      RB7_bit, BitPos(RB7_bit+0)
0x0267	0x2A6A      	GOTO       L__key111
0x0268	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
0x0269	0x2A6B      	GOTO       L__key112
L__key111:
0x026A	0x1706      	BSF        RB6_bit, BitPos(RB6_bit+0)
L__key112:
0x026B	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x026C	0x2A6F      	GOTO       L__key113
0x026D	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x026E	0x2A70      	GOTO       L__key114
L__key113:
0x026F	0x1606      	BSF        RB4_bit, BitPos(RB4_bit+0)
L__key114:
;FinalCode_LockDoorSystem.c,272 :: 		if(!COL1||!COL2||!COL3) {
0x0270	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x0271	0x2A77      	GOTO       L__key84
0x0272	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x0273	0x2A77      	GOTO       L__key84
0x0274	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x0275	0x2A77      	GOTO       L__key84
0x0276	0x2A7F      	GOTO       L_key46
L__key84:
;FinalCode_LockDoorSystem.c,273 :: 		myDelay(100);
0x0277	0x3064      	MOVLW      100
0x0278	0x00D2      	MOVWF      FARG_myDelay_x
0x0279	0x3000      	MOVLW      0
0x027A	0x00D3      	MOVWF      FARG_myDelay_x+1
0x027B	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,275 :: 		rownum=1;
0x027C	0x3001      	MOVLW      1
0x027D	0x00C1      	MOVWF      _rownum
;FinalCode_LockDoorSystem.c,276 :: 		break;
0x027E	0x2AB6      	GOTO       L_key38
;FinalCode_LockDoorSystem.c,277 :: 		}
L_key46:
;FinalCode_LockDoorSystem.c,279 :: 		ROW3=0;ROW2=ROW1=ROW4=1;
0x027F	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
0x0280	0x1786      	BSF        RB7_bit, BitPos(RB7_bit+0)
0x0281	0x1B86      	BTFSC      RB7_bit, BitPos(RB7_bit+0)
0x0282	0x2A85      	GOTO       L__key115
0x0283	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x0284	0x2A86      	GOTO       L__key116
L__key115:
0x0285	0x1606      	BSF        RB4_bit, BitPos(RB4_bit+0)
L__key116:
0x0286	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x0287	0x2A8A      	GOTO       L__key117
0x0288	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x0289	0x2A8B      	GOTO       L__key118
L__key117:
0x028A	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
L__key118:
;FinalCode_LockDoorSystem.c,281 :: 		if(!COL1||!COL2||!COL3) {
0x028B	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x028C	0x2A92      	GOTO       L__key83
0x028D	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x028E	0x2A92      	GOTO       L__key83
0x028F	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x0290	0x2A92      	GOTO       L__key83
0x0291	0x2A9A      	GOTO       L_key49
L__key83:
;FinalCode_LockDoorSystem.c,282 :: 		myDelay(100);
0x0292	0x3064      	MOVLW      100
0x0293	0x00D2      	MOVWF      FARG_myDelay_x
0x0294	0x3000      	MOVLW      0
0x0295	0x00D3      	MOVWF      FARG_myDelay_x+1
0x0296	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,284 :: 		rownum=2;
0x0297	0x3002      	MOVLW      2
0x0298	0x00C1      	MOVWF      _rownum
;FinalCode_LockDoorSystem.c,285 :: 		break;
0x0299	0x2AB6      	GOTO       L_key38
;FinalCode_LockDoorSystem.c,286 :: 		}
L_key49:
;FinalCode_LockDoorSystem.c,288 :: 		ROW4=0; ROW1=ROW2=ROW3=1;
0x029A	0x1386      	BCF        RB7_bit, BitPos(RB7_bit+0)
0x029B	0x1706      	BSF        RB6_bit, BitPos(RB6_bit+0)
0x029C	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x029D	0x2AA0      	GOTO       L__key119
0x029E	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x029F	0x2AA1      	GOTO       L__key120
L__key119:
0x02A0	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
L__key120:
0x02A1	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x02A2	0x2AA5      	GOTO       L__key121
0x02A3	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x02A4	0x2AA6      	GOTO       L__key122
L__key121:
0x02A5	0x1606      	BSF        RB4_bit, BitPos(RB4_bit+0)
L__key122:
;FinalCode_LockDoorSystem.c,290 :: 		if(!COL1||!COL2||!COL3){
0x02A6	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x02A7	0x2AAD      	GOTO       L__key82
0x02A8	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x02A9	0x2AAD      	GOTO       L__key82
0x02AA	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x02AB	0x2AAD      	GOTO       L__key82
0x02AC	0x2AB5      	GOTO       L_key52
L__key82:
;FinalCode_LockDoorSystem.c,291 :: 		myDelay(100);
0x02AD	0x3064      	MOVLW      100
0x02AE	0x00D2      	MOVWF      FARG_myDelay_x
0x02AF	0x3000      	MOVLW      0
0x02B0	0x00D3      	MOVWF      FARG_myDelay_x+1
0x02B1	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,293 :: 		rownum=3;
0x02B2	0x3003      	MOVLW      3
0x02B3	0x00C1      	MOVWF      _rownum
;FinalCode_LockDoorSystem.c,294 :: 		break;
0x02B4	0x2AB6      	GOTO       L_key38
;FinalCode_LockDoorSystem.c,295 :: 		}
L_key52:
;FinalCode_LockDoorSystem.c,296 :: 		}
0x02B5	0x2A45      	GOTO       L_key37
L_key38:
;FinalCode_LockDoorSystem.c,299 :: 		if(COL1==0&&COL2!=0&&COL3!=0)//if COL1 is pressed
0x02B6	0x1886      	BTFSC      RB1_bit, BitPos(RB1_bit+0)
0x02B7	0x2AC3      	GOTO       L_key55
0x02B8	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x02B9	0x2AC3      	GOTO       L_key55
0x02BA	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x02BB	0x2AC3      	GOTO       L_key55
L__key81:
;FinalCode_LockDoorSystem.c,301 :: 		myDelay(100);
0x02BC	0x3064      	MOVLW      100
0x02BD	0x00D2      	MOVWF      FARG_myDelay_x
0x02BE	0x3000      	MOVLW      0
0x02BF	0x00D3      	MOVWF      FARG_myDelay_x+1
0x02C0	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,303 :: 		colnum=0;
0x02C1	0x01BE      	CLRF       _colnum
;FinalCode_LockDoorSystem.c,304 :: 		}
0x02C2	0x2ADE      	GOTO       L_key56
L_key55:
;FinalCode_LockDoorSystem.c,305 :: 		else if(COL1!=0&&COL2==0&&COL3!=0)//if COL2 is pressed
0x02C3	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x02C4	0x2AD1      	GOTO       L_key59
0x02C5	0x1906      	BTFSC      RB2_bit, BitPos(RB2_bit+0)
0x02C6	0x2AD1      	GOTO       L_key59
0x02C7	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x02C8	0x2AD1      	GOTO       L_key59
L__key80:
;FinalCode_LockDoorSystem.c,307 :: 		myDelay(100);
0x02C9	0x3064      	MOVLW      100
0x02CA	0x00D2      	MOVWF      FARG_myDelay_x
0x02CB	0x3000      	MOVLW      0
0x02CC	0x00D3      	MOVWF      FARG_myDelay_x+1
0x02CD	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,309 :: 		colnum=1;
0x02CE	0x3001      	MOVLW      1
0x02CF	0x00BE      	MOVWF      _colnum
;FinalCode_LockDoorSystem.c,310 :: 		}
0x02D0	0x2ADE      	GOTO       L_key60
L_key59:
;FinalCode_LockDoorSystem.c,311 :: 		else if(COL1!=0&&COL2!=0&&COL3==0)//if COL3 is pressed
0x02D1	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x02D2	0x2ADE      	GOTO       L_key63
0x02D3	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x02D4	0x2ADE      	GOTO       L_key63
0x02D5	0x1986      	BTFSC      RB3_bit, BitPos(RB3_bit+0)
0x02D6	0x2ADE      	GOTO       L_key63
L__key79:
;FinalCode_LockDoorSystem.c,313 :: 		myDelay(100);
0x02D7	0x3064      	MOVLW      100
0x02D8	0x00D2      	MOVWF      FARG_myDelay_x
0x02D9	0x3000      	MOVLW      0
0x02DA	0x00D3      	MOVWF      FARG_myDelay_x+1
0x02DB	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,315 :: 		colnum=2;
0x02DC	0x3002      	MOVLW      2
0x02DD	0x00BE      	MOVWF      _colnum
;FinalCode_LockDoorSystem.c,316 :: 		}
L_key63:
L_key60:
L_key56:
;FinalCode_LockDoorSystem.c,319 :: 		while(COL1==0||COL2==0||COL3==0);//to prevent from debouncing to filter out unwanted signals and ensure that only one button press is registered.
L_key64:
0x02DE	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x02DF	0x2AE5      	GOTO       L__key78
0x02E0	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x02E1	0x2AE5      	GOTO       L__key78
0x02E2	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x02E3	0x2AE5      	GOTO       L__key78
0x02E4	0x2AE6      	GOTO       L_key65
L__key78:
0x02E5	0x2ADE      	GOTO       L_key64
L_key65:
;FinalCode_LockDoorSystem.c,321 :: 		return (keypad[rownum][colnum]);
0x02E6	0x3003      	MOVLW      3
0x02E7	0x00F0      	MOVWF      R0
0x02E8	0x0841      	MOVF       _rownum, 0
0x02E9	0x00F4      	MOVWF      R4
0x02EA	0x20C5      	CALL       _Mul_8X8_U
0x02EB	0x3025      	MOVLW      _keypad
0x02EC	0x07F0      	ADDWF      R0, 1
0x02ED	0x083E      	MOVF       _colnum, 0
0x02EE	0x0770      	ADDWF      R0, 0
0x02EF	0x0084      	MOVWF      FSR
0x02F0	0x0800      	MOVF       INDF, 0
0x02F1	0x00F0      	MOVWF      R0
;FinalCode_LockDoorSystem.c,322 :: 		}
L_end_key:
0x02F2	0x0008      	RETURN
; end of _key
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x02F3	0x20AF      	CALL       _____DoICP
0x02F4	0x118A      	BCF        PCLATH, 3
0x02F5	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x02F6	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x02F7	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x02F8	0x0AB1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x02F9	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x02FA	0x0AB2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x02FB	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x02FC	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x02FD	0x2AF3      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x02FE	0x0008      	RETURN
; end of ___CC2DW
_main:
0x02FF	0x3031      	MOVLW      49
0x0300	0x1283      	BCF        STATUS, 5
0x0301	0x1303      	BCF        STATUS, 6
0x0302	0x00A5      	MOVWF      _keypad
0x0303	0x3032      	MOVLW      50
0x0304	0x00A6      	MOVWF      38
0x0305	0x3033      	MOVLW      51
0x0306	0x00A7      	MOVWF      39
0x0307	0x3034      	MOVLW      52
0x0308	0x00A8      	MOVWF      40
0x0309	0x3035      	MOVLW      53
0x030A	0x00A9      	MOVWF      41
0x030B	0x3036      	MOVLW      54
0x030C	0x00AA      	MOVWF      42
0x030D	0x3037      	MOVLW      55
0x030E	0x00AB      	MOVWF      43
0x030F	0x3038      	MOVLW      56
0x0310	0x00AC      	MOVWF      44
0x0311	0x3039      	MOVLW      57
0x0312	0x00AD      	MOVWF      45
0x0313	0x302A      	MOVLW      42
0x0314	0x00AE      	MOVWF      46
0x0315	0x3030      	MOVLW      48
0x0316	0x00AF      	MOVWF      47
0x0317	0x3023      	MOVLW      35
0x0318	0x00B0      	MOVWF      48
;FinalCode_LockDoorSystem.c,325 :: 		void main()
;FinalCode_LockDoorSystem.c,327 :: 		TRISB = 0x0F;  // set RB0 and rows of keypad (RB4,RB5,RB6,RB7) as outputs while coloumns of keypad (RB0,RB1,RB2) are set as inputs
0x0319	0x300F      	MOVLW      15
0x031A	0x1683      	BSF        STATUS, 5
0x031B	0x0086      	MOVWF      TRISB
;FinalCode_LockDoorSystem.c,328 :: 		INTCON =0xD0;  // enable external interrupts on RB0
0x031C	0x30D0      	MOVLW      208
0x031D	0x008B      	MOVWF      INTCON
;FinalCode_LockDoorSystem.c,329 :: 		TRISD=0x00;              //set LCD data pins as output "0"
0x031E	0x0188      	CLRF       TRISD
;FinalCode_LockDoorSystem.c,330 :: 		TRISA=0x20; //set buzzer (RA0) and LED lights (RA1/RA2) as outputs "0"  and PIR as input
0x031F	0x3020      	MOVLW      32
0x0320	0x0085      	MOVWF      TRISA
;FinalCode_LockDoorSystem.c,331 :: 		TRISC=0x00;     //set LCD command RC-7 as output and servo motor RC2 "0"
0x0321	0x0187      	CLRF       TRISC
;FinalCode_LockDoorSystem.c,332 :: 		PORTD=0X00;
0x0322	0x1283      	BCF        STATUS, 5
0x0323	0x0188      	CLRF       PORTD
;FinalCode_LockDoorSystem.c,333 :: 		ADCON1=0x06;//make PORTA Digital
0x0324	0x3006      	MOVLW      6
0x0325	0x1683      	BSF        STATUS, 5
0x0326	0x009F      	MOVWF      ADCON1
;FinalCode_LockDoorSystem.c,334 :: 		option_reg = option_reg&0x7F;
0x0327	0x307F      	MOVLW      127
0x0328	0x0581      	ANDWF      OPTION_REG, 1
;FinalCode_LockDoorSystem.c,335 :: 		PORTA=0;
0x0329	0x1283      	BCF        STATUS, 5
0x032A	0x0185      	CLRF       PORTA
;FinalCode_LockDoorSystem.c,338 :: 		LCDinit();
0x032B	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,339 :: 		LCDcommand(0x80);
0x032C	0x3080      	MOVLW      128
0x032D	0x00D1      	MOVWF      FARG_LCDcommand_command
0x032E	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,340 :: 		LCDout("HELLO", 5);
0x032F	0x30CB      	MOVLW      ?lstr_8_FinalCode_LockDoorSystem
0x0330	0x00CD      	MOVWF      FARG_LCDout_string
0x0331	0x3003      	MOVLW      hi_addr(?lstr_8_FinalCode_LockDoorSystem)
0x0332	0x00CE      	MOVWF      FARG_LCDout_string+1
0x0333	0x3005      	MOVLW      5
0x0334	0x00CF      	MOVWF      FARG_LCDout_length
0x0335	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,341 :: 		myDelay(2000);
0x0336	0x30D0      	MOVLW      208
0x0337	0x00D2      	MOVWF      FARG_myDelay_x
0x0338	0x3007      	MOVLW      7
0x0339	0x00D3      	MOVWF      FARG_myDelay_x+1
0x033A	0x204F      	CALL       _myDelay
;FinalCode_LockDoorSystem.c,342 :: 		LCDinit();
0x033B	0x20B6      	CALL       _LCDinit
;FinalCode_LockDoorSystem.c,343 :: 		LCDcommand(0x80);
0x033C	0x3080      	MOVLW      128
0x033D	0x00D1      	MOVWF      FARG_LCDcommand_command
0x033E	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,344 :: 		LCDout("ENTER PASSWORD", 14);
0x033F	0x3073      	MOVLW      ?lstr_9_FinalCode_LockDoorSystem
0x0340	0x00CD      	MOVWF      FARG_LCDout_string
0x0341	0x3003      	MOVLW      hi_addr(?lstr_9_FinalCode_LockDoorSystem)
0x0342	0x00CE      	MOVWF      FARG_LCDout_string+1
0x0343	0x300E      	MOVLW      14
0x0344	0x00CF      	MOVWF      FARG_LCDout_length
0x0345	0x211E      	CALL       _LCDout
;FinalCode_LockDoorSystem.c,345 :: 		LCDcommand(0xC0);
0x0346	0x30C0      	MOVLW      192
0x0347	0x00D1      	MOVWF      FARG_LCDcommand_command
0x0348	0x209E      	CALL       _LCDcommand
;FinalCode_LockDoorSystem.c,346 :: 		while(1) // loop indefinitely
L_main68:
;FinalCode_LockDoorSystem.c,349 :: 		for(i=0;i<5;i++)
0x0349	0x01C8      	CLRF       _i
0x034A	0x01C9      	CLRF       _i+1
L_main70:
0x034B	0x3000      	MOVLW      0
0x034C	0x0249      	SUBWF      _i+1, 0
0x034D	0x1D03      	BTFSS      STATUS, 2
0x034E	0x2B51      	GOTO       L__main124
0x034F	0x3005      	MOVLW      5
0x0350	0x0248      	SUBWF      _i, 0
L__main124:
0x0351	0x1803      	BTFSC      STATUS, 0
0x0352	0x2B71      	GOTO       L_main71
;FinalCode_LockDoorSystem.c,352 :: 		kp=key();
0x0353	0x223B      	CALL       _key
0x0354	0x0870      	MOVF       R0, 0
0x0355	0x00CA      	MOVWF      _kp
;FinalCode_LockDoorSystem.c,353 :: 		if(kp=='#')
0x0356	0x0870      	MOVF       R0, 0
0x0357	0x3A23      	XORLW      35
0x0358	0x1D03      	BTFSS      STATUS, 2
0x0359	0x2B5C      	GOTO       L_main73
;FinalCode_LockDoorSystem.c,354 :: 		{ checkpass();
0x035A	0x214C      	CALL       _checkpass
;FinalCode_LockDoorSystem.c,355 :: 		}
0x035B	0x2B6D      	GOTO       L_main74
L_main73:
;FinalCode_LockDoorSystem.c,356 :: 		else if (kp=='*')
0x035C	0x084A      	MOVF       _kp, 0
0x035D	0x3A2A      	XORLW      42
0x035E	0x1D03      	BTFSS      STATUS, 2
0x035F	0x2B62      	GOTO       L_main75
;FinalCode_LockDoorSystem.c,358 :: 		resetpass();
0x0360	0x2138      	CALL       _resetpass
;FinalCode_LockDoorSystem.c,359 :: 		}
0x0361	0x2B6D      	GOTO       L_main76
L_main75:
;FinalCode_LockDoorSystem.c,363 :: 		pass[i]=kp;
0x0362	0x0848      	MOVF       _i, 0
0x0363	0x3E33      	ADDLW      _pass
0x0364	0x0084      	MOVWF      FSR
0x0365	0x084A      	MOVF       _kp, 0
0x0366	0x0080      	MOVWF      INDF
;FinalCode_LockDoorSystem.c,364 :: 		LCDdata(pass[i]);
0x0367	0x0848      	MOVF       _i, 0
0x0368	0x3E33      	ADDLW      _pass
0x0369	0x0084      	MOVWF      FSR
0x036A	0x0800      	MOVF       INDF, 0
0x036B	0x00D1      	MOVWF      FARG_LCDdata_data1
0x036C	0x208E      	CALL       _LCDdata
;FinalCode_LockDoorSystem.c,365 :: 		}
L_main76:
L_main74:
;FinalCode_LockDoorSystem.c,349 :: 		for(i=0;i<5;i++)
0x036D	0x0AC8      	INCF       _i, 1
0x036E	0x1903      	BTFSC      STATUS, 2
0x036F	0x0AC9      	INCF       _i+1, 1
;FinalCode_LockDoorSystem.c,366 :: 		}
0x0370	0x2B4B      	GOTO       L_main70
L_main71:
;FinalCode_LockDoorSystem.c,368 :: 		}
0x0371	0x2B49      	GOTO       L_main68
;FinalCode_LockDoorSystem.c,369 :: 		}
L_end_main:
0x0372	0x2B72      	GOTO       $+0
; end of _main
;FinalCode_LockDoorSystem.c,0 :: ?lstr_9_FinalCode_LockDoorSystem
0x0373	0x3445 ;?lstr_9_FinalCode_LockDoorSystem+0
0x0374	0x344E ;?lstr_9_FinalCode_LockDoorSystem+1
0x0375	0x3454 ;?lstr_9_FinalCode_LockDoorSystem+2
0x0376	0x3445 ;?lstr_9_FinalCode_LockDoorSystem+3
0x0377	0x3452 ;?lstr_9_FinalCode_LockDoorSystem+4
0x0378	0x3420 ;?lstr_9_FinalCode_LockDoorSystem+5
0x0379	0x3450 ;?lstr_9_FinalCode_LockDoorSystem+6
0x037A	0x3441 ;?lstr_9_FinalCode_LockDoorSystem+7
0x037B	0x3453 ;?lstr_9_FinalCode_LockDoorSystem+8
0x037C	0x3453 ;?lstr_9_FinalCode_LockDoorSystem+9
0x037D	0x3457 ;?lstr_9_FinalCode_LockDoorSystem+10
0x037E	0x344F ;?lstr_9_FinalCode_LockDoorSystem+11
0x037F	0x3452 ;?lstr_9_FinalCode_LockDoorSystem+12
0x0380	0x3444 ;?lstr_9_FinalCode_LockDoorSystem+13
0x0381	0x3400 ;?lstr_9_FinalCode_LockDoorSystem+14
; end of ?lstr_9_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_2_FinalCode_LockDoorSystem
0x0382	0x3444 ;?lstr_2_FinalCode_LockDoorSystem+0
0x0383	0x344F ;?lstr_2_FinalCode_LockDoorSystem+1
0x0384	0x344F ;?lstr_2_FinalCode_LockDoorSystem+2
0x0385	0x3452 ;?lstr_2_FinalCode_LockDoorSystem+3
0x0386	0x3420 ;?lstr_2_FinalCode_LockDoorSystem+4
0x0387	0x3449 ;?lstr_2_FinalCode_LockDoorSystem+5
0x0388	0x3453 ;?lstr_2_FinalCode_LockDoorSystem+6
0x0389	0x3420 ;?lstr_2_FinalCode_LockDoorSystem+7
0x038A	0x344F ;?lstr_2_FinalCode_LockDoorSystem+8
0x038B	0x3450 ;?lstr_2_FinalCode_LockDoorSystem+9
0x038C	0x3445 ;?lstr_2_FinalCode_LockDoorSystem+10
0x038D	0x344E ;?lstr_2_FinalCode_LockDoorSystem+11
0x038E	0x3445 ;?lstr_2_FinalCode_LockDoorSystem+12
0x038F	0x3444 ;?lstr_2_FinalCode_LockDoorSystem+13
0x0390	0x3400 ;?lstr_2_FinalCode_LockDoorSystem+14
; end of ?lstr_2_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_3_FinalCode_LockDoorSystem
0x0391	0x3470 ;?lstr_3_FinalCode_LockDoorSystem+0
0x0392	0x3472 ;?lstr_3_FinalCode_LockDoorSystem+1
0x0393	0x346F ;?lstr_3_FinalCode_LockDoorSystem+2
0x0394	0x3463 ;?lstr_3_FinalCode_LockDoorSystem+3
0x0395	0x3465 ;?lstr_3_FinalCode_LockDoorSystem+4
0x0396	0x3473 ;?lstr_3_FinalCode_LockDoorSystem+5
0x0397	0x3473 ;?lstr_3_FinalCode_LockDoorSystem+6
0x0398	0x3469 ;?lstr_3_FinalCode_LockDoorSystem+7
0x0399	0x346E ;?lstr_3_FinalCode_LockDoorSystem+8
0x039A	0x3467 ;?lstr_3_FinalCode_LockDoorSystem+9
0x039B	0x3400 ;?lstr_3_FinalCode_LockDoorSystem+10
; end of ?lstr_3_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_6_FinalCode_LockDoorSystem
0x039C	0x3449 ;?lstr_6_FinalCode_LockDoorSystem+0
0x039D	0x344E ;?lstr_6_FinalCode_LockDoorSystem+1
0x039E	0x3443 ;?lstr_6_FinalCode_LockDoorSystem+2
0x039F	0x344F ;?lstr_6_FinalCode_LockDoorSystem+3
0x03A0	0x3452 ;?lstr_6_FinalCode_LockDoorSystem+4
0x03A1	0x3452 ;?lstr_6_FinalCode_LockDoorSystem+5
0x03A2	0x3445 ;?lstr_6_FinalCode_LockDoorSystem+6
0x03A3	0x3443 ;?lstr_6_FinalCode_LockDoorSystem+7
0x03A4	0x3454 ;?lstr_6_FinalCode_LockDoorSystem+8
0x03A5	0x3400 ;?lstr_6_FinalCode_LockDoorSystem+9
; end of ?lstr_6_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_7_FinalCode_LockDoorSystem
0x03A6	0x3449 ;?lstr_7_FinalCode_LockDoorSystem+0
0x03A7	0x344E ;?lstr_7_FinalCode_LockDoorSystem+1
0x03A8	0x3443 ;?lstr_7_FinalCode_LockDoorSystem+2
0x03A9	0x344F ;?lstr_7_FinalCode_LockDoorSystem+3
0x03AA	0x3452 ;?lstr_7_FinalCode_LockDoorSystem+4
0x03AB	0x3452 ;?lstr_7_FinalCode_LockDoorSystem+5
0x03AC	0x3445 ;?lstr_7_FinalCode_LockDoorSystem+6
0x03AD	0x3443 ;?lstr_7_FinalCode_LockDoorSystem+7
0x03AE	0x3454 ;?lstr_7_FinalCode_LockDoorSystem+8
0x03AF	0x3400 ;?lstr_7_FinalCode_LockDoorSystem+9
; end of ?lstr_7_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_5_FinalCode_LockDoorSystem
0x03B0	0x3441 ;?lstr_5_FinalCode_LockDoorSystem+0
0x03B1	0x344C ;?lstr_5_FinalCode_LockDoorSystem+1
0x03B2	0x3441 ;?lstr_5_FinalCode_LockDoorSystem+2
0x03B3	0x3452 ;?lstr_5_FinalCode_LockDoorSystem+3
0x03B4	0x344D ;?lstr_5_FinalCode_LockDoorSystem+4
0x03B5	0x3420 ;?lstr_5_FinalCode_LockDoorSystem+5
0x03B6	0x344F ;?lstr_5_FinalCode_LockDoorSystem+6
0x03B7	0x344E ;?lstr_5_FinalCode_LockDoorSystem+7
0x03B8	0x3400 ;?lstr_5_FinalCode_LockDoorSystem+8
; end of ?lstr_5_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_1_FinalCode_LockDoorSystem
0x03B9	0x3452 ;?lstr_1_FinalCode_LockDoorSystem+0
0x03BA	0x3445 ;?lstr_1_FinalCode_LockDoorSystem+1
0x03BB	0x3453 ;?lstr_1_FinalCode_LockDoorSystem+2
0x03BC	0x3445 ;?lstr_1_FinalCode_LockDoorSystem+3
0x03BD	0x3454 ;?lstr_1_FinalCode_LockDoorSystem+4
0x03BE	0x342E ;?lstr_1_FinalCode_LockDoorSystem+5
0x03BF	0x342E ;?lstr_1_FinalCode_LockDoorSystem+6
0x03C0	0x342E ;?lstr_1_FinalCode_LockDoorSystem+7
0x03C1	0x3400 ;?lstr_1_FinalCode_LockDoorSystem+8
; end of ?lstr_1_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_4_FinalCode_LockDoorSystem
0x03C2	0x3441 ;?lstr_4_FinalCode_LockDoorSystem+0
0x03C3	0x344C ;?lstr_4_FinalCode_LockDoorSystem+1
0x03C4	0x3441 ;?lstr_4_FinalCode_LockDoorSystem+2
0x03C5	0x3452 ;?lstr_4_FinalCode_LockDoorSystem+3
0x03C6	0x344D ;?lstr_4_FinalCode_LockDoorSystem+4
0x03C7	0x3420 ;?lstr_4_FinalCode_LockDoorSystem+5
0x03C8	0x344F ;?lstr_4_FinalCode_LockDoorSystem+6
0x03C9	0x344E ;?lstr_4_FinalCode_LockDoorSystem+7
0x03CA	0x3400 ;?lstr_4_FinalCode_LockDoorSystem+8
; end of ?lstr_4_FinalCode_LockDoorSystem
;FinalCode_LockDoorSystem.c,0 :: ?lstr_8_FinalCode_LockDoorSystem
0x03CB	0x3448 ;?lstr_8_FinalCode_LockDoorSystem+0
0x03CC	0x3445 ;?lstr_8_FinalCode_LockDoorSystem+1
0x03CD	0x344C ;?lstr_8_FinalCode_LockDoorSystem+2
0x03CE	0x344C ;?lstr_8_FinalCode_LockDoorSystem+3
0x03CF	0x344F ;?lstr_8_FinalCode_LockDoorSystem+4
0x03D0	0x3400 ;?lstr_8_FinalCode_LockDoorSystem+5
; end of ?lstr_8_FinalCode_LockDoorSystem
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [75]    _interrupt
0x004F      [63]    _myDelay
0x008E      [16]    _LCDdata
0x009E      [17]    _LCDcommand
0x00AF       [7]    _____DoICP
0x00B6      [15]    _LCDinit
0x00C5      [25]    _Mul_8X8_U
0x00DE      [35]    _doorcontrol
0x0101      [29]    _Div_16X16_U
0x011E      [26]    _LCDout
0x0138      [20]    _resetpass
0x014C     [239]    _checkpass
0x023B     [184]    _key
0x02F3      [12]    ___CC2DW
0x02FF     [116]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB6_bit
0x0006       [1]    PORTB
0x0006       [0]    RB7_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [1]    CCP1CON
0x0025      [12]    _keypad
0x0031       [2]    ___DoICPAddr
0x0033       [4]    _pass
0x0037       [4]    _count8
0x003B       [2]    _tick
0x003D       [1]    _HL
0x003E       [1]    _colnum
0x003F       [2]    _angle
0x0041       [1]    _rownum
0x0042       [2]    _k
0x0044       [2]    _count
0x0046       [2]    _v
0x0048       [2]    _i
0x004A       [1]    _kp
0x004B       [1]    ___savePCLATH
0x004C       [1]    ___saveSTATUS
0x004D       [2]    FARG_LCDout_string
0x004F       [1]    FARG_LCDout_length
0x0050       [1]    LCDout_k_L0
0x0051       [1]    FARG_LCDdata_data1
0x0051       [1]    FARG_LCDcommand_command
0x0052       [2]    FARG_myDelay_x
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x008C       [1]    PIE1
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0373      [15]    ?lstr_9_FinalCode_LockDoorSystem
0x0382      [15]    ?lstr_2_FinalCode_LockDoorSystem
0x0391      [11]    ?lstr_3_FinalCode_LockDoorSystem
0x039C      [10]    ?lstr_6_FinalCode_LockDoorSystem
0x03A6      [10]    ?lstr_7_FinalCode_LockDoorSystem
0x03B0       [9]    ?lstr_5_FinalCode_LockDoorSystem
0x03B9       [9]    ?lstr_1_FinalCode_LockDoorSystem
0x03C2       [9]    ?lstr_4_FinalCode_LockDoorSystem
0x03CB       [6]    ?lstr_8_FinalCode_LockDoorSystem
